[{"D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\index.js":"1","D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\reportWebVitals.js":"2","D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\App.js":"3","D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\Components\\Landing\\Landing.js":"4","D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\Config.js":"5","D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\Components\\Landing\\Data.js":"6"},{"size":543,"mtime":1606863205552,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":264,"mtime":1606868344566,"results":"10","hashOfConfig":"8"},{"size":4969,"mtime":1608090485667,"results":"11","hashOfConfig":"8"},{"size":53,"mtime":1606800581505,"results":"12","hashOfConfig":"8"},{"size":522,"mtime":1608170622039,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"18fi5n2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\index.js",[],["28","29"],"D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\reportWebVitals.js",[],"D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\App.js",[],"D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\Components\\Landing\\Landing.js",["30","31"],"import React, { useState, useEffect } from 'react'\r\nimport { API_KEY } from '../../Config'\r\nimport { Colours } from './Data'\r\nimport ProgressiveImage from \"react-progressive-graceful-image\";\r\n\r\nfunction Landing() {\r\n\r\n    const [Background, setBackground] = useState();\r\n    const [Count, setCount] = useState(0);\r\n    const [Query, setQuery] = useState(\"Flowers\");\r\n    const [ColoursChart, setColoursChart] = useState(Colours);\r\n    const [ColourSelection, setColorSelection] = useState(0);\r\n    const [NextPage, setNextPage] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch(`https://api.pexels.com/v1/search?query=${Query}&color=${ColoursChart[ColourSelection].colour}&per_page=20`, {\r\n            headers: {\r\n                Authorization: `${API_KEY}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setNextPage(res.next_page)\r\n                setBackground(res)\r\n            })\r\n\r\n    }, [ColourSelection]);\r\n\r\n    const getNextImages = () => {\r\n        fetch(NextPage, {\r\n            headers: {\r\n                Authorization: `${API_KEY}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n\r\n                setNextPage(res.next_page)\r\n                setBackground(res);\r\n            })\r\n    }\r\n\r\n    const nextImage = () => {\r\n        if (Count >= 18) {\r\n            setCount(0)\r\n            getNextImages()\r\n        }\r\n        else {\r\n            setCount(Count + 1)\r\n        }\r\n\r\n    }\r\n    const prevImage = () => {\r\n        setCount(Count - 1)\r\n    }\r\n\r\n    const colourSelect = (e) => {\r\n        setColorSelection(e.target.id)\r\n        setCount(0)\r\n    }\r\n\r\n    const onChangeSearch = (e) => {\r\n        setQuery(e.currentTarget.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        setCount(0)\r\n        e.preventDefault();\r\n        fetch(`https://api.pexels.com/v1/search?query=${Query}&color=${ColoursChart[ColourSelection].colour}&per_page=20`, {\r\n            headers: {\r\n                Authorization: `${API_KEY}`\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                //console.log(res)\r\n                if (res.total_results <= 0) {\r\n\r\n                    setQuery(\"No Results Found\")\r\n                }\r\n                else {\r\n                    setBackground(res)\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Background && Background.photos.length > 0 ? <div className=\"hero-container\" style={{ backgroundColor: `${ColoursChart[ColourSelection].colour}` }}>\r\n                <div>\r\n                    <div className=\"wallpaper-container\">\r\n                        {Background.photos[Count].width > Background.photos[Count].height ?\r\n                            <ProgressiveImage src={Background.photos[Count].src.original} placeholder={Background.photos[Count].src.landscape} >\r\n                                {(src, loading) => <img style={{ opacity: loading ? 0.3 : 1 }} src={src} className=\"landscape\" alt=\"wallpaper\" />}\r\n                            </ProgressiveImage>\r\n                            :\r\n                            <ProgressiveImage src={Background.photos[Count].src.original} placeholder={Background.photos[Count].src.large} >\r\n                                {(src, loading) => <img style={{ opacity: loading ? 0.3 : 1 }} src={src} className=\"portrait\" alt=\"wallpaper\" />}\r\n                            </ProgressiveImage>\r\n                        }\r\n\r\n                    </div>\r\n                    <div className=\"colours-container\">\r\n                        {ColoursChart.map((el, index) => {\r\n                            return <div className=\"colours\" style={{ backgroundColor: `${el.colour}` }} key={index} id={index} onClick={colourSelect}>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"action-container\">\r\n                        <h2>The Wall Engine</h2>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <input type=\"text\" value={Query} onChange={onChangeSearch} required />\r\n                        </form>\r\n                        <div className='action-buttons'>\r\n                            {Count <= 0 ? <button style={{ backgroundColor: 'black' }}>ðŸ¡ </button> : <button onClick={prevImage}>ðŸ¡ </button>}\r\n                            <button onClick={nextImage}>ðŸ¡¢</button>\r\n                        </div>\r\n                        <h2>\r\n                            <span className=\"pexels\">Powered By Pexels</span>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"photographer-container\">\r\n                        <p>Photographer: {Background.photos[Count].photographer} </p>\r\n                    </div>\r\n                </div>\r\n            </div> : <span></span>}\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\Config.js",[],"D:\\Portfolio\\LightOnTheLand\\wallengine\\src\\Components\\Landing\\Data.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":11,"column":26,"nodeType":"38","messageId":"39","endLine":11,"endColumn":41},{"ruleId":"40","severity":1,"message":"41","line":27,"column":8,"nodeType":"42","endLine":27,"endColumn":25,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'setColoursChart' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ColoursChart' and 'Query'. Either include them or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [ColourSelection, ColoursChart, Query]",{"range":"49","text":"50"},[961,978],"[ColourSelection, ColoursChart, Query]"]